on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: '3.5'}
          - {os: windows-latest, r: '3.6'}
          # Fails at Install R dependencies with
          # Warning: unable to access index for repository https://cloud.r-project.org/bin/windows/contrib/4.***:
          # installation of package 'fs' had non-zero exit status
          # installation of package 'XML' had non-zero exit status
          # installation of package 'rlist' had non-zero exit status
          #- {os: windows-latest, r: 'devel'}
          # Fails at r-lib/actions/setup-r@master
          #- {os: windows-latest, r: '4.0'}
          # Fails at R CMD Check with:
          # ERROR: dependency ‘sf’ is not available for package ‘wastdr’
          - {os: macOS-latest, r: '3.5'}
          - {os: macOS-latest, r: '3.6'}
          # Fails at "Source install macOS packages"" with:
          # ERROR: dependencies ‘tidyr’, ‘dplyr’, ‘promises’ are not available for package ‘plotly’
          # ERROR: dependencies ‘dplyr’, ‘proj4’, ‘plotly’ are not available for package ‘ggalt’
          # installation of package ‘proj4’ had non-zero exit status
          # installation of package ‘later’ had non-zero exit status
          # installation of package ‘promises’ had non-zero exit status
          # installation of package ‘dplyr’ had non-zero exit status
          # installation of package ‘tidyr’ had non-zero exit status
          #- {os: macOS-latest, r: 'devel'}
          #- {os: macOS-latest, r: '4.0'}
          # fails on missing proj4
          #- {os: macOS-latest, r: 'devel'}
          #
          # After fixing https://github.com/tidyverse/stringr/issues/320
          # fails with libproj.so.***2: missing
          # ERROR dependency ‘geojsonio’ is not available for package ‘wastdr’
          #- {os: ubuntu-16.04, r: '3.5', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          #- {os: ubuntu-16.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          # fails at r-lib/actions/setup-r@master
          #- {os: ubuntu-16.04, r: 'devel', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          - {os: ubuntu-18.04, r: '3.5', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          # fails at r-lib/actions/setup-r@master
          # reason https://github.com/r-lib/actions/issues/49
          #- {os: ubuntu-18.04, r: 'devel', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          #- {os: ubuntu-18.04, r: '4.0', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      ODKC_URL: ${{secrets.ODKC_URL}}
      ODKC_UN: ${{secrets.ODKC_UN}}
      ODKC_PW: ${{secrets.ODKC_PW}}
      WASTDR_API_URL: ${{secrets.WASTDR_API_URL}}
      WASTDR_API_UN: ${{secrets.WASTDR_API_UN}}
      WASTDR_API_PW: ${{secrets.WASTDR_API_PW}}
      WASTDR_API_TOKEN: ${{secrets.WASTDR_API_TOKEN}}
      GITHUB_PAT: ${{secrets.GITHUB_PAT}}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install R packages for CI
        run: |
          install.packages('remotes')
          remotes::install_github('r-hub/sysreqs')
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Hoard toilet paper (and R packages)
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Add Ubuntu Xenial patches
        if:  matrix.config.os == 'ubuntu-16.04'
        run: sudo add-apt-repository -y ppa:opencpu/jq

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Bash Windows over the head with a source install of dplyr and sf
        if: runner.os == 'Windows'
        run: |
          install.packages("dplyr", type = "source")
          install.packages("sf", type = "source")
        shell: Rscript {0}

      - name: Source install macOS system deps
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config
          brew install udunits
          brew install proj
          brew install gdal

      # macos-latest configure: error: libproj not found in standard or given locations.
      - name: Source install macOS packages
        if: runner.os == 'macOS'
        run: |
          remotes::install_github('ropensci/geojsonio')
          remotes::install_github('hrbrmstr/ggalt')
          remotes::install_github('r-spatial/sf')
        shell: Rscript {0}

      - name: Source install Ubuntu Xenial packages
        if: matrix.config.os == 'ubuntu-16.04'
        run: |
          install.packages(c('knitr', 'roxygen2', 'stringi', 'stringr'))
        shell: Rscript {0}

      - name: Install R dependencies
        run: |
          install.packages('V8')
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: R CMD Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Setup git and install package, report test coverage
        if: matrix.config.os == 'ubuntu-18.04' && matrix.config.r == '3.6'
        run: |
          git config --global user.name ${{secrets.GH_USER}}
          git config --global user.email ${{secrets.GH_EMAIL}}
          R CMD INSTALL .

      - name: Report test coverage
        if: matrix.config.os == 'ubuntu-18.04' && matrix.config.r == '3.6'
        run: covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Deploy pkgdown docs
        if: matrix.config.os == 'ubuntu-18.04' && matrix.config.r == '3.6'
        run: |
          remotes::install_dev("pkgdown")
          pkgdown::deploy_to_branch(new_process = FALSE)
        shell: Rscript {0}
