% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{turtle_nest_encounters}
\alias{turtle_nest_encounters}
\title{TurtleNestEncounter (tracks and nests) WAStD API response}
\format{An object of class \code{wastd_api_response} of length 3.}
\source{
https://strandings.dpaw.wa.gov.au/api/1/turtle-nest-encounters/?taxon=Cheloniidae&limit=100&format=json
}
\usage{
turtle_nest_encounters
}
\description{
This API response is parsed into wastr's data "tracks".
}
\examples{
\dontrun{
# Generate turtle_nest_encounters_hatched
q = list(taxon = "Cheloniidae", limit = 100, format = "json")
turtle_nest_encounters <- wastdr::get_wastd("turtle-nest-encounters", query = q)
anonymize <- function(dict){
    dummy = list(name = "Test Name",
             username = "test_name",
             email = "test@email.com",
             phone = "")
    dict$properties <- dict$properties \%>\%
        purrr::update_list(observer = dummy, reporter = dummy)
    dict
}
turtle_nest_encounters$content <- turtle_nest_encounters$content \%>\% map(anonymize)
listviewer::jsonedit(turtle_nest_encounters$content)
tracks <- parse_turtle_nest_encounters(turtle_nest_encounters)
DT::datatable(tracks)
devtools::use_data(turtle_nest_encounters, overwrite = TRUE)
devtools::use_data(tracks, overwrite = TRUE)
}
# Prove that turtle_nest_encounters_hatched parses to nests
library(dplyr)
data(turtle_nest_encounters)
data(tracks)
fresh_tracks <- parse_turtle_nest_encounters(turtle_nest_encounters)
testthat::expect_equal(nrow(fresh_tracks), nrow(tracks))
# Compare pickled and fresh tracks excluding list columns (like obs)
testthat::expect_equal(fresh_tracks \%>\% dplyr::select(-obs),
                       tracks \%>\% dplyr::select(-obs))
}
\keyword{datasets}
