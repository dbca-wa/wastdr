% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odkc_plan.R
\name{odkc_plan}
\alias{odkc_plan}
\title{Top-level Turtle Nesting Census data import Drake Plan}
\usage{
odkc_plan(
  api_url = wastdr::get_wastdr_api_url(),
  api_token = wastdr::get_wastdr_api_token(),
  verbose = wastdr::get_wastdr_verbose()
)
}
\arguments{
\item{api_url}{(character) The WAStD API URL,
default \code{\link{get_wastdr_api_url}}, see \code{\link{wastdr_setup}}}

\item{api_token}{(character) The WAStD API token,
default \code{\link{get_wastdr_api_token}}, see \code{\link{wastdr_setup}}}

\item{verbose}{Whether to show debug messages.
Default: wastdr::get_wastdr_verbose()}

\item{api_un}{(character) A WAStD API username,
default \code{\link{get_wastdr_api_un}}, see \code{\link{wastdr_setup}}}

\item{api_pw}{(character) A WAStD API password,
default \code{\link{get_wastdr_api_pw}}, see \code{\link{wastdr_setup}}}
}
\description{
* Download all ODKC data including attachments
* Load existing nesting records from TSC: load only a minimal set of
  source, source ID, QA status to determine later what to
  create / update / skip:
  * does not exist in TSC: create (POST)
  * exists in TSC with status "new": update (PATCH)
  * exists in TSC with status higher than "new": skip (and message)
  * Make (transform) ODKC to WAStD data
  * Load transformed data into WAStD's API (create/update/skip)
  * No QA
}
\examples{
\dontrun{

# Step 1: New users (username, name, phone, email, role)
# 400 for existing, 201 for new
Append new users to spreadsheet: username, name, email, phone, role
users <- here::here("users.csv") \%>\%
  readr::read_csv(col_types = "ccccc") \%>\%
  wastdr::wastd_bulk_post("users")

users_dev <- here::here("users.csv") \%>\%
  readr::read_csv(col_types = "ccccc") \%>\%
  wastdr::wastd_bulk_post("users",
  api_url = Sys.getenv("WASTDR_API_DEV_URL"),
  api_token = Sys.getenv("WASTDR_API_DEV_TOKEN"),
  verbose = TRUE)

# save point for debug
save(odkc_data, tsc_data, user_mapping, file="odkc_import.RData")
load("odkc_import.RData")

wastdr::odkc_plan()
drake::vis_drake_graph(odkc_plan())
drake::clean()
drake::make(odkc_plan())
}
}
