% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wastd_GET.R
\name{wastd_GET}
\alias{wastd_GET}
\title{Return GeoJSON features from a WAStD API endpoint as data.table or list}
\usage{
wastd_GET(
  serializer,
  query = list(),
  format = "json",
  max_records = NULL,
  chunk_size = 1000,
  api_url = get_wastdr_api_url(),
  api_token = get_wastdr_api_token(),
  api_un = get_wastdr_api_un(),
  api_pw = get_wastdr_api_pw(),
  verbose = wastdr::get_wastdr_verbose()
)
}
\arguments{
\item{serializer}{(character) WAStD API serializer name (required)
Possible values as per
\code{https://strandings.dpaw.wa.gov.au/api/1/?format=corejson} are:
\itemize{
\item encounters (all encounters, but only core fields)
\item animal-encounters (strandings, tagging)
\item turtle-nest-encounters (tracks and nests)
\item logger-encounters (temp and other loggers)
\item areas (polygons of known areas)
\item media-attachments (photos, data sheets etc)
\item nesttag-observations (sightings of nest tags)
\item tag-observations (tag observations during encounters)
\item taxa (WACensus taxa)
}}

\item{query}{<list> A list of GET parameters, default: list().
The \code{format} is specified in a separate top-level param.}

\item{format}{<chr> The desired API output format, default: "json".}

\item{max_records}{<int> The maximum number of records retrieved.
If left at default (NULL), all records are returned.
Default: NULL.}

\item{chunk_size}{<int> The number of records to retrieve in each paginated
response. A specified but smaller \code{limit} will override
\code{chunk_size}.
Adjust \code{chunk_size} down if getting timeouts from the API.
Default: 1000.}

\item{api_url}{(character) The WAStD API URL,
default \code{\link{get_wastdr_api_url}}, see \code{\link{wastdr_setup}}}

\item{api_token}{(character) The WAStD API token,
default \code{\link{get_wastdr_api_token}}, see \code{\link{wastdr_setup}}}

\item{api_un}{(character) A WAStD API username,
default \code{\link{get_wastdr_api_un}}, see \code{\link{wastdr_setup}}}

\item{api_pw}{(character) A WAStD API password,
default \code{\link{get_wastdr_api_pw}}, see \code{\link{wastdr_setup}}}

\item{verbose}{Whether to show debug messages.
Default: wastdr::get_wastdr_verbose()}
}
\value{
An S3 object of class 'wastd_api_response' containing:

  features: The sent GeoJSON features

  serializer: The called serializer, e.g. 'supra'

  response: The API HTTP response with all metadata
}
\description{
Call the WAStD API serializer's list view with given GET
  parameters, parse the response's features into a nested list.
  This function requires the WAStD API to return the results in a key
  `features` as is the standard for a GeoJSON FeatureCollection.
}
\examples{
\dontrun{
track_records <- wastd_GET("turtle-nest-encounters")
tag_records <- wastd_GET("animal-encounters")
hatched_nest_records <- wastd_GET("turtle-nest-encounters",
  query = list(nest_type = "hatched-nest")
)
}
}
